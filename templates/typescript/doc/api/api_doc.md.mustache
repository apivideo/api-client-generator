# {{classname}}{{#description}}
{{description}}{{/description}}

All URIs are relative to *{{basePath}}*

Method | HTTP request | Description
------------- | ------------- | -------------
{{#operations}}{{#operation}}[**{{operationId}}**]({{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}

{{#operations}}
{{#operation}}
<a name="{{operationId}}"></a>
## **{{operationId}}**{{#comment}}{{^vendorExtensions.x-group-parameters}}
> {{#returnType}}{{returnType}} {{/returnType}}{{operationId}}({{#allParams}}{{{paramName}}}{{^-last}}, {{/-last}}{{/allParams}}){{/vendorExtensions.x-group-parameters}}{{#vendorExtensions.x-group-parameters}}
> {{#returnType}}{{returnType}} {{/returnType}}{{operationId}}({{#requiredParams}}{{paramName}}{{^-last}}, {{/-last}}{{/requiredParams}}){{#optionalParams}}.{{paramName}}({{paramName}}){{/optionalParams}}.execute();{{/vendorExtensions.x-group-parameters}}
{{/comment}}

{{#unescape}}{{summary}}{{#notes}}

{{notes}}{{/notes}}{{/unescape}}

### Example
```js
(async () => {
    try {
    {{^authMethods}}
        const client = new VideoApiClient();
    {{/authMethods}}
    {{#authMethods}}
        const client = new VideoApiClient({ apiKey: "YOUR_API_TOKEN" });
    {{/authMethods}}

    {{#allParams}}
        {{^vendorExtensions.x-client-doc-hidden}}
        const {{{paramName}}} = '{{{example}}}'; // {{{description}}}
        {{/vendorExtensions.x-client-doc-hidden}}
        {{#isModel}}
            {{#vars}}
                {{{paramName}}}.{{setter}}({{#unescape}}{{example}}{{/unescape}}); // {{ unescapedDescription }}
            {{/vars}}
        {{/isModel}}
    {{/allParams}}

    {{#returnType}}
        // {{#vendorExtensions.x-client-paginated}}Page<{{vendorExtensions.x-pagination.type}}>{{/vendorExtensions.x-client-paginated}}{{^vendorExtensions.x-client-paginated}}{{returnType}}{{/vendorExtensions.x-client-paginated}}
    {{/returnType}}
    {{^vendorExtensions.x-group-parameters}}
        const result = await client.{{classVarName}}.{{{operationId}}}({{#allParams}}{{{paramName}}}{{^-last}}, {{/-last}}{{/allParams}});
    {{/vendorExtensions.x-group-parameters}}
    {{#vendorExtensions.x-group-parameters}}
        const result = await client.{{classVarName}}.{{{operationId}}}({ {{#allParams}}{{{paramName}}}{{^-last}}, {{/-last}}{{/allParams}} })
    {{/vendorExtensions.x-group-parameters}}
    {{#returnType}}
        console.log(result);
    {{/returnType}}
    } catch (e) {
        console.error(e);
    }
})();
```

### Parameters
{{^allParams}}This endpoint does not need any parameter.{{/allParams}}{{#allParams}}{{#-last}}
Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------{{/-last}}{{/allParams}}
{{#allParams}} **{{paramName}}** | {{#isPrimitiveType}}**{{dataType}}**{{/isPrimitiveType}}{{^isPrimitiveType}}{{#isFile}}**{{dataType}}**{{/isFile}}{{^isFile}}[**{{dataType}}**]({{baseType}}.md){{/isFile}}{{/isPrimitiveType}}| {{description}} |{{^required}} [optional]{{/required}}{{^isContainer}}{{#defaultValue}} [default to {{defaultValue}}]{{/defaultValue}}{{/isContainer}}{{#allowableValues}} [enum: {{#values}}{{{.}}}{{^-last}}, {{/-last}}{{/values}}]{{/allowableValues}}
{{/allParams}}{{#vendorExtensions.x-client-chunk-upload}}

### Upload chunks

Large files are broken into chunks for upload. You can control the size of the chunks using the `setUploadChunkSize()` of method of `ApiVideoClient` before uploading:

```java
apiVideoClient.setUploadChunkSize(50*1024*1024); // use 50MB chunks
apiVideoClient.{{classVarName}}().{{{operationId}}}{{^vendorExtensions.x-group-parameters}}({{#allParams}}{{{paramName}}}{{^-last}}, {{/-last}}{{/allParams}});{{/vendorExtensions.x-group-parameters}}{{#vendorExtensions.x-group-parameters}}({{#requiredParams}}{{{paramName}}}{{^-last}}, {{/-last}}{{/requiredParams}}){{#optionalParams}}
    .{{{paramName}}}({{{paramName}}}){{/optionalParams}}
    .execute();{{/vendorExtensions.x-group-parameters}}
```
{{/vendorExtensions.x-client-chunk-upload}}

### Return type
{{#returnType}}{{#vendorExtensions.x-client-paginated}}[**Page**](pagination.md)<[**{{vendorExtensions.x-pagination.type}}**]({{vendorExtensions.x-pagination.type}}.md)>{{/vendorExtensions.x-client-paginated}}{{/returnType}}
{{^vendorExtensions.x-client-paginated}}{{#returnType}}{{#returnTypeIsPrimitive}}**{{returnType}}**{{/returnTypeIsPrimitive}}{{^returnTypeIsPrimitive}}[**{{returnType}}**](../model/{{returnBaseType}}.md){{/returnTypeIsPrimitive}}{{/returnType}}{{^returnType}}null (empty response body){{/returnType}}{{/vendorExtensions.x-client-paginated}}

### HTTP request headers

 - **Content-Type**: {{#consumes}}{{{mediaType}}}{{^-last}}, {{/-last}}{{/consumes}}{{^consumes}}Not defined{{/consumes}}
 - **Accept**: {{#produces}}{{{mediaType}}}{{^-last}}, {{/-last}}{{/produces}}{{^produces}}Not defined{{/produces}}

{{#responses.0}}
### HTTP response details
| Status code | Description | Response headers |
|-------------|-------------|------------------|
{{#responses}}
**{{code}}** | {{message}} | {{#headers}} * {{baseName}} - {{description}} <br> {{/headers}}{{^headers.0}} - {{/headers.0}} |
{{/responses}}
{{/responses.0}}

{{/operation}}
{{/operations}}
