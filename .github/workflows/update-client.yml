name: update-client
on: [push]
jobs:
  update-client:
    runs-on: ubuntu-latest

    env:
      PROFILE_PATH: generated-clients/${{ matrix.profile }}
      OWNER: apivideo
      REPO: ${{ matrix.profile }}-api-client
      BRANCH: ${{ github.run_id }}
      TARGET: main

    strategy:
      matrix:
        profile: ['typescript']

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache openapi-generator dependencies and build
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            ${{ env.GITHUB_WORKSPACE }}/apivideo-generator/target
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Checkout client
        uses: actions/checkout@v2
        with:
          repository: ${{ env.OWNER }}/${{ env.REPO }}
          token: ${{ secrets.PAT }}
          path: ${{ env.PROFILE_PATH }}

      - name: Remove files to allow files deletion from git
        run: |
          cd ${{ env.PROFILE_PATH }}
          rm -r *

      - name: Generate client
        run: mvn package -P ${{ matrix.profile }}


      - name: Get commit
        id: commit
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data: { commit } } = await github.request(`GET /repos/${process.env.GITHUB_REPOSITORY}/commits/${process.env.GITHUB_SHA}`);
            core.exportVariable('SHA_MESSAGE', commit.message);
            core.exportVariable('SHA_AUTHOR_NAME', commit.author.name);
            core.exportVariable('SHA_AUTHOR_EMAIL', commit.author.email);

      - name: Configure git user, add, commit and push changes if required
        run: |
          cd ${{ env.PROFILE_PATH }}
          git config user.name '${{ env.SHA_AUTHOR_NAME }}'
          git config user.email '${{ env.SHA_AUTHOR_EMAIL }}'
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          git add .
          git commit -m '${{ env.SHA_MESSAGE }}'
          git push origin HEAD --force
